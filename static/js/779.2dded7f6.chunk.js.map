{"version":3,"file":"static/js/779.2dded7f6.chunk.js","mappings":"yPAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAGoBH,EAAAA,EAAAA,IAAA,qCAAwCC,EAAxC,iBAAwDE,IAH5E,uBAGKC,EAHL,EAGKA,KAHL,kBAKIA,EAAKC,SALT,yDAQIC,IAAAA,OAAAA,QAAA,UACF,KAAMC,QADJ,wCARJ,gFAqDA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kGAIsBT,EAAAA,EAAAA,IAAA,gBACRS,EADQ,4BACcR,IALpC,uBAIQG,EAJR,EAIQA,KAJR,kBAQQA,GARR,yDAUQE,IAAAA,OAAAA,QAAA,UACA,KAAMC,QADN,wCAVR,gF,6BCxDP,IAJc,WAEb,C,8JCCYG,EAAOC,EAAAA,EAAAA,GAAH,+SAeJC,EAAOD,EAAAA,EAAAA,GAAH,mZAkBJE,EAAQF,EAAAA,EAAAA,EAAH,wE,oCCgBlB,EA5CgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBN,GAAU,GAFO,UAGSV,EAAAA,EAAAA,IAAeM,GAHxB,OAGXW,EAHW,OAIjBL,EAAWK,GAJM,gDAMjBC,EAAAA,OAAAA,QAAe,KAAMnB,SACrBe,GAAW,GAPM,yBASjBJ,GAAU,GATO,4EAAH,qDAalBM,GACD,GAAE,CAACV,IAEJ,IAAQT,EAAYc,EAAZd,QAER,OACE,2BACGY,IAAU,SAACU,EAAA,EAAD,IACVN,IAAW,SAACO,EAAA,EAAD,IACXvB,GAAWA,EAAQwB,OAAS,GAC3B,SAACnB,EAAD,UACGL,EAAQyB,KAAI,gBAAGC,EAAH,EAAGA,OAAQtB,EAAX,EAAWA,GAAIuB,EAAf,EAAeA,QAAf,OACX,UAACpB,EAAD,YACE,UAACC,EAAD,sBAAgBkB,MAChB,uBAAIC,MAFKvB,EADA,OAQf,sEAIP,C","sources":["API/API_KEY.js","components/Error/Error.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'dbdaf7f3b1704351fa5cae8bb683f93c';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n  try {\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data.results;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n","const Error = () => {\n  <strong>Something went wrong, please contact the administrator</strong>;\n};\n\nexport default Error;\n","import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\n\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n   margin-right: auto;\n\n`\n\nexport const Item = styled.li`\n  \n color:inherit;\n\n transition: transform 0.2s ease;\n\n box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n \n :hover {\n\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n\n`\n\nexport const Title = styled.p`\n\n max-width:200px;\n text-align:center;\n\n\n\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from '../../API/API_KEY';\nimport { List, Item, Title } from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\nimport Error from '../Error/Error';\nimport { Notify } from 'notiflix';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [loader, setLoader] = useState(false);\n  const [reviews, setReviews] = useState({});\n  const [failure, setFailure] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoader(true);\n        const reviewsData = await getReviewsById(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        Notify.failure(error.message);\n        setFailure(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  const { results } = reviews;\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {failure && <Error />}\n      {results && results.length > 0 ? (\n        <List>\n          {results.map(({ author, id, content }) => (\n            <Item key={id}>\n              <Title>Author: {author}</Title>\n              <p>{content}</p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["axios","API_KEY","getMovieTrends","currentPage","data","results","Notiflix","message","getReviewsById","id","List","styled","Item","Title","movieId","useParams","useState","loader","setLoader","reviews","setReviews","failure","setFailure","useEffect","fetchReviews","reviewsData","Notify","Loader","Error","length","map","author","content"],"sourceRoot":""}