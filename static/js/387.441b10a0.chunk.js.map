{"version":3,"file":"static/js/387.441b10a0.chunk.js","mappings":"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","sources":["API/API_KEY.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.jsx","components/Placeholder/Placeholder.styled.js","components/Placeholder/Placeholder.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'dbdaf7f3b1704351fa5cae8bb683f93c';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n  try {\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data.results;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n     margin: 0 auto;\n    padding: 0;\n    list-style: none;\n\n`;\n\nexport const Item = styled.li`\n\npadding:5px;\n color:inherit;\n\n transition: transform 0.2s ease;\n\n box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n :hover {\n\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n\n`;\n\nexport const Title = styled.h3`\n\n max-width:200px;\n text-align:center;\n`;\n\nexport const SubTitle = styled.p`\nmax-width:200px;\ntext-align:center;\n\n`;\n\n\n","import { useEffect, useState } from 'react';\nimport { getCastById } from 'API/API_KEY';\nimport { useParams } from 'react-router-dom';\nimport { List, Item, Title, SubTitle } from './Cast.styled';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { Notify } from 'notiflix';\n\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState({});\n  const [loader, setLoader] = useState(false);\n  const [failure, setFailure] = useState(false);\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      try {\n        setLoader(true);\n        const castsData = await getCastById(movieId);\n        setCasts(castsData);\n      } catch (error) {\n        setFailure(true);\n        Notify.failure(error.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    fetchCasts();\n  }, [movieId]);\n\n  const { cast } = casts;\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {failure && <Error />}\n      {cast && (\n        <List>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <Item key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={name}\n                  width=\"200\"\n                />\n              ) : (\n                <Placeholder title=\"Photo\" />\n              )}\n              <Title>{name}</Title>\n              <SubTitle>{character}</SubTitle>\n            </Item>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n\n","const Error = () => {\n  <strong>Something went wrong, please contact the administrator</strong>;\n};\n\nexport default Error;\n","import styled from \"@emotion/styled\"\n\nexport const Wrapper = styled.div`\n\nwidth:200px;\nheight: 300px;\nbackground-color: #fff;\nfont-style: italic;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: grey;\n`;\n","import { Wrapper } from './Placeholder.styled';\n\nconst Placeholder = ({title}) => {\n  return (\n    <Wrapper>\n      {title} will be added soon...\n    </Wrapper>\n  )\n}\n\nexport default Placeholder;\n"],"names":["axios","API_KEY","getMovieTrends","currentPage","data","results","Notiflix","message","getMovieByQuery","query","getMovieById","id","getCastById","getReviewsById","List","styled","Item","Title","SubTitle","movieId","useParams","useState","casts","setCasts","loader","setLoader","failure","setFailure","useEffect","fetchCasts","castsData","Notify","cast","Loader","Error","map","name","character","profile_path","src","alt","width","Placeholder","title","Wrapper"],"sourceRoot":""}