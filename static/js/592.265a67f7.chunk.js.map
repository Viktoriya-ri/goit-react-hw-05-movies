{"version":3,"file":"static/js/592.265a67f7.chunk.js","mappings":"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","sources":["API/API_KEY.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Placeholder/Placeholder.styled.js","components/Placeholder/Placeholder.jsx","components/Form/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'dbdaf7f3b1704351fa5cae8bb683f93c';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n  try {\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data.results;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n","import styled from \"@emotion/styled\"\n\n\nexport const List = styled.ul`\n\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n   margin-right: auto;\n\n`;\n\nexport const Item = styled.li`\n color:inherit;\n transition: transform 0.2s ease;\n box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n :hover {\n    transform: scale(1.05);\n    font-weight: 500;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n\n`;\n\nexport const Title = styled.p`\n max-width:200px;\n text-align:center;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { List, Item, Title } from \"./MoviesList.styled\";\nimport Placeholder from \"components/Placeholder/Placeholder\";\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const uniqueMoves = Array.from(new Set(movies.map(movie => movie.id))).map(id =>\n    movies.find(movie => movie.id === id));\n  return (\n    <List>\n      {uniqueMoves.map(({ id, title, name, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={title ? title : name}\n                width=\"200\"\n              />\n            ) : (\n              <Placeholder title={`${title} poster`} />\n            )}\n\n            <Title>{title ? title : name}</Title>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\"\n\nexport const Wrapper = styled.div`\n\nwidth:200px;\nheight: 300px;\nbackground-color: #fff;\nfont-style: italic;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: grey;\n`;\n","import { Wrapper } from './Placeholder.styled';\n\nconst Placeholder = ({title}) => {\n  return (\n    <Wrapper>\n      {title} will be added soon...\n    </Wrapper>\n  )\n}\n\nexport default Placeholder;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return Notify.failure('query can`t be empty');\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <input value={query} autoFocus onChange={e => handleChange(e)} name='text' />\n      <button type='submit'>Search</button>\n\n    </form>\n  )\n}\n\nexport default Form;\n\n\n","import { useState, useEffect } from \"react\";\nimport { Notify } from \"notiflix\";\nimport { getMovieByQuery } from \"API/API_KEY\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport Form from \"components/Form/Form\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [failure, setFailure] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentParamsQuery = searchParams.get('query');\n\n    if (!currentParamsQuery) return;\n\n    const fetchedMovies = async () => {\n      try {\n        setLoader(true);\n        const fetchedData = await getMovieByQuery(currentParamsQuery);\n\n        if (fetchedData.length === 0) {\n          Notify.failure(\"We've found nothig by this query\");\n        }\n        setMovies(fetchedData);\n      } catch (error) {\n        setFailure(false);\n        Notify.failure(error.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchedMovies();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies && movies.length > 0 && <MoviesList movies={movies} />}\n      {loader && <Loader />}\n      {failure &&\n        <strong>Something went wrong, please contact the administrator</strong>\n      }\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getMovieTrends","currentPage","data","results","Notiflix","message","getMovieByQuery","query","getMovieById","id","getReviewsById","List","styled","Item","Title","movies","location","useLocation","uniqueMoves","Array","from","Set","map","movie","find","title","name","poster_path","to","state","src","alt","width","Placeholder","Wrapper","setSearchParams","useState","setQuery","handleSubmit","e","preventDefault","trim","Notify","onSubmit","value","autoFocus","onChange","target","handleChange","type","setMovies","loader","setLoader","failure","setFailure","useSearchParams","searchParams","useEffect","currentParamsQuery","get","fetchedMovies","fetchedData","length","MoviesList","Loader"],"sourceRoot":""}